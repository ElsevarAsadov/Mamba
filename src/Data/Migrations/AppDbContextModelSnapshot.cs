// <auto-generated />
using Data.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Models.Employeer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Employeers");
                });

            modelBuilder.Entity("Core.Models.EmployeerPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeerPositions");
                });

            modelBuilder.Entity("Core.Models.EmployeeSocialMedia", b =>
                {
                    b.Property<int>("EmployeerId")
                        .HasColumnType("int");

                    b.Property<int>("SocialMediaId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeerId", "SocialMediaId");

                    b.HasIndex("SocialMediaId");

                    b.ToTable("EmployeeSocialMedia");
                });

            modelBuilder.Entity("Core.Models.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialMediaAccounts");
                });

            modelBuilder.Entity("Core.Models.Employeer", b =>
                {
                    b.HasOne("Core.Models.EmployeerPosition", "Position")
                        .WithMany("Employeers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Core.Models.EmployeeSocialMedia", b =>
                {
                    b.HasOne("Core.Models.Employeer", "Employeer")
                        .WithMany("EmployeeSocialMedia")
                        .HasForeignKey("EmployeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Models.SocialMedia", "SocialMedia")
                        .WithMany("EmployeeSocialMedia")
                        .HasForeignKey("SocialMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employeer");

                    b.Navigation("SocialMedia");
                });

            modelBuilder.Entity("Core.Models.Employeer", b =>
                {
                    b.Navigation("EmployeeSocialMedia");
                });

            modelBuilder.Entity("Core.Models.EmployeerPosition", b =>
                {
                    b.Navigation("Employeers");
                });

            modelBuilder.Entity("Core.Models.SocialMedia", b =>
                {
                    b.Navigation("EmployeeSocialMedia");
                });
#pragma warning restore 612, 618
        }
    }
}
